name: 'Deploy Example App'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'example-app/**'
      - '.github/workflows/deploy-example-app.yaml'

jobs:
  deploy:
    if: github.repository == 'WingRiders/wallet' # Perform execution only in the public repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.27

      - name: Install dependencies
        run: bun install

      - name: Build the example app
        run: bun run build --filter=./example-app
        env:
          # Using production environment variables
          VITE_GATEWAY_URL: https://wallet.wingriders.com
          VITE_CAB_SERVER_URL_PREPROD: https://cab-server.preprod.wingriders.com
          VITE_CAB_SERVER_URL_MAINNET: https://cab-server.mainnet.wingriders.com

      - name: Upload the built app to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.EXAMPLE_APP_AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: './example-app/dist'

  invalidate-cache:
    needs: [deploy]
    name: Invalidate AWS CloudFront cache
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Invalidate Cloudfront cache
        run: |
          CFID=$(aws cloudfront list-distributions --output text --query "DistributionList.Items[?Comment == 'wingriders-static-s3-site-wallet-example-app'].Id | [0] || ''")
          [[ -n "${CFID}" ]] && aws cloudfront create-invalidation --distribution-id "${CFID}" --paths "/*" || echo "No CloudFront distribution ${CFID} found."

